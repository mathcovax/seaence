import "../repositories";
import { CountTotalBakedDocumentTranslationReportingAggregateUsecase } from "@business/applications/usecases/bakedDocumentTranslationReportingAggregate/countTotalBakedDocumentTranslationReportingAggregate";
import { FindManyBakedDocumentTranslationReportingUsecase } from "@business/applications/usecases/bakedDocumentTranslationReporting/findManyBakedDocumentTranslationReporting";
import { FindManyBakedDocumentTranslationReportingAggregateUsecase } from "@business/applications/usecases/bakedDocumentTranslationReportingAggregate/findManyBakedDocumentTranslationReportingAggregate";
import { UpsertBakedDocumentTranslationReportingUsecase } from "@business/applications/usecases/bakedDocumentTranslationReporting/upsertBakedDocumentTranslationReporting";
import { CountTotalBakedDocumentTranslationReportingByBakedDocumentIdUsecase } from "@business/applications/usecases/bakedDocumentTranslationReporting/countTotalBakedDocumentTranslationReportingByBakedDocumentId";
import { FindOneBakedDocumentTranslationReportingAggregateUsecase } from "@business/applications/usecases/bakedDocumentTranslationReportingAggregate/findOneBakedDocumentTranslationReportingAggregate";
import { ProcessesBakedDocumentTranslationReportingAggregateUsecase } from "@business/applications/usecases/bakedDocumentTranslationReportingAggregate/processesBakedDocumentTranslationReportingAggregate";

export const upsertBakedDocumentTranslationReportingUsecase = new UpsertBakedDocumentTranslationReportingUsecase();
export const findManyBakedDocumentTranslationReportingUsecase = new FindManyBakedDocumentTranslationReportingUsecase();
export const countTotalBakedDocumentTranslationReportingByBakedDocumentIdUsecase
	= new CountTotalBakedDocumentTranslationReportingByBakedDocumentIdUsecase();

export const findManyBakedDocumentTranslationReportingAggregateUsecase
	= new FindManyBakedDocumentTranslationReportingAggregateUsecase();
export const countTotalBakedDocumentTranslationReportingAggregateUsecase
	= new CountTotalBakedDocumentTranslationReportingAggregateUsecase();
export const findOneBakedDocumentTranslationReportingAggregateUsecase
	= new FindOneBakedDocumentTranslationReportingAggregateUsecase();
export const processesBakedDocumentTranslationReportingAggregateUsecase
	= new ProcessesBakedDocumentTranslationReportingAggregateUsecase();

