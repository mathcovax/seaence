// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "POST";
    path: "/enable-reply-post-notification-settings";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 200;
        information: "replyPostNotification.enable";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/disable-reply-post-notification-settings";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 200;
        information: "replyPostNotification.disable";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/find-reply-to-post-notification-settings";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 404;
        information: "replyToPostNotificationSettings.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "replyPostNotificationSettings.found";
        body: {
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            postId: string;
            type: "replyToPostNotificationSettingsType";
        } | null;
    };
}) | ({
    method: "POST";
    path: "/find-notifications";
    body: {
        userId: string;
        page: number;
        quantityPerPage: number;
    };
    response: {
        code: 200;
        information: "notications.found";
        body: ({
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "registerNotificationType";
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            postId: string;
            usernameOfReplyPost: string;
            summaryOfReplyPost: string;
            type: "replyToPostNotificationType";
        })[];
    };
}) | ({
    method: "POST";
    path: "/count-notification";
    body: {
        userId: string;
    };
    response: {
        code: 200;
        information: "notications.count";
        body: {
            count: number;
        };
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
