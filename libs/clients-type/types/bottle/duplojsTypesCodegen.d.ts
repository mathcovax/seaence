// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "POST";
    path: "/notification-reply-post-setting-disable";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 404;
        information: "replyToPostNotificationSetting.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "replyPostNotification.disable";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-reply-post-setting-enable";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "replyPostNotification.enable";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-reply-to-post-setting-find-one";
    body: {
        userId: string;
        postId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 404;
        information: "replyToPostNotificationSetting.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "replyPostNotificationSetting.found";
        body: {
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            postId: string;
            type: "replyToPostNotificationSettingType";
        };
    };
}) | ({
    method: "POST";
    path: "/notification-find-many";
    body: {
        userId: string;
        page: number;
        quantityPerPage: number;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "notifications.found";
        body: ({
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "registerNotificationType";
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            postId: string;
            usernameOfReplyPost: string;
            summaryOfReplyPost: string;
            type: "replyToPostNotificationType";
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "userPostBanNotificationType";
            postId: string;
            reason: string;
            warningId: string;
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "userPostWarningNotificationType";
            postId: string;
            reason: string;
            warningId: string;
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "userAnswerBanNotificationType";
            postId: string;
            answerId: string;
            reason: string;
            warningId: string;
        } | {
            id: string;
            user: {
                id: string;
                username: string;
                email: string;
                language: "fr-FR" | "en-US";
            };
            processed: boolean;
            createdAt: Date;
            deleteAt: Date;
            type: "userAnswerWarningNotificationType";
            postId: string;
            answerId: string;
            reason: string;
            warningId: string;
        })[];
    };
}) | ({
    method: "POST";
    path: "/notification-count";
    body: {
        userId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "notifications.count";
        body: {
            count: number;
        };
    };
}) | ({
    method: "POST";
    path: "/notification-post-warning-create";
    body: {
        userId: string;
        warningId: string;
        postId: string;
        reason: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "notification.postWarning.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-post-ban-create";
    body: {
        userId: string;
        warningId: string;
        postId: string;
        reason: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "notification.postBan.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-answer-warning-create";
    body: {
        userId: string;
        warningId: string;
        postId: string;
        answerId: string;
        reason: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "notification.answerWarning.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-answer-ban-create";
    body: {
        userId: string;
        warningId: string;
        postId: string;
        answerId: string;
        reason: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "notification.answerBan.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/notification-date-find-last";
    body: {
        userId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 204;
        information: "notification.noNotification";
        body?: undefined;
    } | {
        code: 200;
        information: "dateOfLastNotification.found";
        body: {
            dateOfLastNotification: Date;
        };
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
