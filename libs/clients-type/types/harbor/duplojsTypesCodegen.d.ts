// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "POST";
    path: "/user/update-personal-data";
    body: {
        userId: string;
        username?: string | undefined;
        language?: ("fr-FR" | "en-US") | undefined;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 403;
        information: "user.shortUpdatedDelay";
        body?: undefined;
    } | {
        code: 204;
        information: "user.updated";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/user/delete";
    body: {
        userId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 403;
        information: "user.alreadyDelete";
        body?: undefined;
    } | {
        code: 204;
        information: "user.deleted";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/create-post-user-warning";
    body: {
        makeUserBan: boolean;
        reason: string;
        userId: string;
        postId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "warning.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/create-answer-user-warning";
    body: {
        makeUserBan: boolean;
        reason: string;
        userId: string;
        postId: string;
        answerId: string;
    };
    response: {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "warning.created";
        body?: undefined;
    };
}) | ({
    method: "POST";
    path: "/user/find-one-by-access-token";
    body: {
        accessToken: string;
    };
    response: {
        code: 401;
        information: "accessToken.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "user.found";
        body: {
            id: string;
            email: string;
            username: string;
            lastUpdate: Date;
            language: "fr-FR" | "en-US";
            banned: boolean;
        };
    };
}) | ({
    method: "POST";
    path: "/login";
    body: {
        firebaseToken: string;
    };
    response: {
        code: 401;
        information: "firebase.token.invalid";
        body?: undefined;
    } | {
        code: 404;
        information: "user.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "user.logged";
        body: {
            accessToken: string;
        };
    };
}) | ({
    method: "POST";
    path: "/register";
    body: {
        firebaseToken: string;
        username: string;
        language: "fr-FR" | "en-US";
    };
    response: {
        code: 401;
        information: "firebase.token.invalid";
        body?: undefined;
    } | {
        code: 409;
        information: "user.emailAlreadyExist";
        body?: undefined;
    } | {
        code: 200;
        information: "user.registered";
        body: {
            accessToken: string;
        };
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
