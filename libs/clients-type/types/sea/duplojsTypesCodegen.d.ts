// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type AbstractSectionName = "introduction" | "background" | "objective" | "method" | "result" | "conclusion" | "reference" | "acknowledgment" | "objective" | "option" | "outcome" | "evidence" | "value" | "benefit" | "recommendation" | "validation" | "sponsor" | "purpose" | "patient" | "setting" | "studyObjective" | "measurementAndMainResult" | "introductions" | "backgrounds" | "objectives" | "methods" | "results" | "conclusions" | "references" | "acknowledgments" | "objectives" | "options" | "outcomes" | "evidences" | "values" | "benefits" | "recommendations" | "validations" | "sponsors" | "purposes" | "patients" | "settings" | "studyObjectives" | "measurementsAndMainResults";

export { AbstractSectionName };

type CodegenRoutes = ({
    method: "PUT";
    path: "/document";
    body: {
        language: "fr-Fr" | "en-US";
        AbysBakedDocumentId: string;
        title: string;
        abstract?: string | undefined;
        abstractDetails: Record<AbstractSectionName, {
            value: string;
        } | undefined>;
        ressources: {
            pubmed?: {
                name?: string | undefined;
                url?: string | undefined;
            } | undefined;
        };
        keywords?: {
            pound: number;
            value: string;
        }[] | undefined;
        webPublishDate: {
            day: number | null;
            month: number | null;
            year: number;
        };
        journalPublishDate: {
            day: number | null;
            month: number | null;
            year: number;
        };
    };
    response: {
        code: 201;
        information: "document.created";
        body?: undefined;
    } | {
        code: 200;
        information: "document.updated";
        body?: undefined;
    } | {
        code: 500;
        information: "document.error.operation_failed";
        body?: undefined;
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
