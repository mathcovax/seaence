// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "GET";
    path: "/documents/{documentId}/posts";
    params: {
        documentId: string;
    };
    query: {
        page: number;
    };
    response: {
        code: 200;
        information: "posts.found";
        body: {
            posts: {
                id: string;
                topic: string;
                content: string | null;
                author: {
                    id: string;
                    username: string;
                };
                answerCount: number;
                createdAt: Date;
            }[];
            totalCount: number;
            quantityPerPage: number;
        };
    };
}) | ({
    method: "POST";
    path: "/posts";
    body: {
        topic: string;
        content: string | null;
        document: {
            id: string;
            title: string;
        };
        author: {
            id: string;
            username: string;
        };
    };
    response: {
        code: 201;
        information: "post.created";
        body?: undefined;
    };
}) | ({
    method: "GET";
    path: "/posts/{postId}";
    params: {
        postId: string;
    };
    response: {
        code: 404;
        information: "post.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "post.found";
        body: {
            id: string;
            topic: string;
            content: string | null;
            author: {
                id: string;
                username: string;
            };
            answerCount: number;
            createdAt: Date;
            document: {
                id: string;
                title: string;
            };
        };
    };
}) | ({
    method: "POST";
    path: "/posts/{postId}/answers";
    body: {
        content: string;
        author: {
            id: string;
            username: string;
        };
    };
    params: {
        postId: string;
    };
    response: {
        code: 404;
        information: "post.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "answer.created";
        body?: undefined;
    };
}) | ({
    method: "GET";
    path: "/posts/{postId}/answers";
    params: {
        postId: string;
    };
    query: {
        page: number;
    };
    response: {
        code: 404;
        information: "post.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "answers.found";
        body: {
            id: string;
            postId: string;
            content: string;
            author: {
                id: string;
                username: string;
            };
        }[];
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
