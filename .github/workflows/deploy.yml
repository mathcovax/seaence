name: Deploy

on:
  release:
    types: [created]

jobs:
  build-vue-front:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
      - run: npm run build
        env: 
          VITE_HORIZON_ENTRYPOINT_BASE_URL: ${{ secrets.HORIZON_ENTRYPOINT_BASE_URL }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          file: ./.docker/vue-front.dockerfile
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/seaence_vue-front:latest,
            ghcr.io/${{ github.repository_owner }}/seaence_vue-front:${{ github.event.release.tag_name }}

  build-duplo-back:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          file: ./.docker/duplo-back.dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/seaence_duplo-back:latest,
            ghcr.io/${{ github.repository_owner }}/seaence_duplo-back:${{ github.event.release.tag_name }}

  migrate:
    runs-on: self-hosted
    needs:
      - build-vue-front
      - build-duplo-back
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
      - run: |
          echo "${{ secrets.HARBOR_ENV_LOCAL }}" > ./services/harbor/harbor.env.local
          npm -w services/harbor run prisma:deploy


  deploy:
    runs-on: self-hosted
    needs: migrate
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker rmi $(docker images -q) -f || true
          docker builder prune -af || true
      - run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS }}' > ./firebase.credential.json
          echo '${{ secrets.HORIZON_ENV_LOCAL }}' > ./horizon.env.local
          echo '${{ secrets.HARBOR_ENV_LOCAL }}' > ./harbor.env.local
          echo '${{ secrets.SPOTTER_NGINX_CONF }}' > ./spotter.nginx.conf
      - run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MASTER_SSH_KEY }}" > ~/.ssh/runner-key
          chmod 600 ~/.ssh/runner-key
      - run: |
          SSH_HOSTS=(
            "${{ secrets.MASTER_SSH_HOST }}" \
            "${{ secrets.WORKER_1_SSH_HOST }}" \
            "${{ secrets.WORKER_2_SSH_HOST }}" \
            "${{ secrets.WORKER_3_SSH_HOST }}" \
            "${{ secrets.WORKER_4_SSH_HOST }}" \
            "${{ secrets.WORKER_5_SSH_HOST }}" \
          )
          
          for SSH_HOST in "${SSH_HOSTS[@]}"; do
            rsync -av \
              -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/runner-key" \
              --include="compose.prod.yml" \
              --include="firebase.credential.json" \
              --include="*.env.local" \
              --include="*.nginx.conf" \
              --exclude='*' \
              ./ \
              "${{ secrets.MASTER_SSH_USER }}@$SSH_HOST:/home/${{ secrets.MASTER_SSH_USER }}/seaence";

            ssh -o StrictHostKeyChecking=no \
              -i ~/.ssh/runner-key \
              "${{ secrets.MASTER_SSH_USER }}@$SSH_HOST" \
              "docker rm \$(docker ps -a -q) || true && docker rmi \$(docker images -q) || true && docker builder prune -af || true";
          done
      - run: |
          ssh -o StrictHostKeyChecking=no \
            -i ~/.ssh/runner-key \
            ${{ secrets.MASTER_SSH_USER }}@${{ secrets.MASTER_SSH_HOST }} \
            "TAG=${{ github.event.release.tag_name }} docker stack deploy -c /home/${{ secrets.MASTER_SSH_USER }}/seaence/compose.prod.yml seaence"
      


      
