name: Deploy

on:
  release:
    types: [created]

jobs:
  prepar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          path: .
          name: seaence

  build-spotter:
    runs-on: ubuntu-latest
    needs: prepar
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
          name: seaence
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: ./services/spotter/
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/seaence_spotter:latest,
            ghcr.io/${{ github.repository_owner }}/seaence_spotter:${{ github.event.release.tag_name }}
            
  deploy:
    runs-on: self-hosted
    needs:
      - build-spotter
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
          name: seaence
      - run: ls
      - run: cat ./compose.prod.yml
      - run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MASTER_SSH_KEY }}" > ~/.ssh/runner-key
          chmod 600 ~/.ssh/runner-key
      - run: |
          scp -o StrictHostKeyChecking=no \
            -i ~/.ssh/runner-key \
            -r ./compose.prod.yml \
            ${{ secrets.MASTER_SSH_USER }}@${{ secrets.MASTER_SSH_HOST }}:/home/${{ secrets.MASTER_SSH_USER }}/seaence/compose.prod.yml
      - run: |
          ssh -o StrictHostKeyChecking=no \
            -i ~/.ssh/runner-key \
            ${{ secrets.MASTER_SSH_USER }}@${{ secrets.MASTER_SSH_HOST }} \
            "docker stack deploy -c /home/${{ secrets.MASTER_SSH_USER }}/seaence/compose.prod.yml seaence -e TAG=${{ github.event.release.tag_name }}"
      


      
