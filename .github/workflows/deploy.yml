name: Deploy

on:
  release:
    types: [created]

jobs:
  build-vue-front:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm ci
      - run: npm run build
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          file: ./.docker/vue-front.dockerfile
          context: ./.docker
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/seaence_vue-front:latest,
            ghcr.io/${{ github.repository_owner }}/seaence_vue-front:${{ github.event.release.tag_name }}

  build-duplo-back:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          file: ./.docker/duplo-back.dockerfile
          context: ./.docker
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/seaence_duplo-back:latest,
            ghcr.io/${{ github.repository_owner }}/seaence_duplo-back:${{ github.event.release.tag_name }}
    
  deploy:
    runs-on: self-hosted
    needs:
      - build-vue-front
      - build-duplo-back
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > ./firebase.credential.json
          echo "${{ secrets.HORIZON_ENV_LOCAL }}" > ./horizon.env.local
          echo "${{ secrets.HARBOR_ENV_LOCAL }}" > ./harbor.env.local
          echo "${{ secrets.SPOTTER_NGINX_CONF }}" > ./spotter.nginx.conf
      - run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.MASTER_SSH_KEY }}" > ~/.ssh/runner-key
          chmod 600 ~/.ssh/runner-key
      - run: |
          rsync -av \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/runner-key" \
            --include="compose.prod.yml" \
            --include="firebase.credential.json" \
            --include="*.env.local" \
            --include="*.nginx.conf" \
            --exclude='*' \
            ./ \
            ${{ secrets.MASTER_SSH_USER }}@${{ secrets.MASTER_SSH_HOST }}:/home/${{ secrets.MASTER_SSH_USER }}/seaence
      - run: |
          ssh -o StrictHostKeyChecking=no \
            -i ~/.ssh/runner-key \
            ${{ secrets.MASTER_SSH_USER }}@${{ secrets.MASTER_SSH_HOST }} \
            "TAG=${{ github.event.release.tag_name }} docker stack deploy -c /home/${{ secrets.MASTER_SSH_USER }}/seaence/compose.prod.yml seaence"
      


      
