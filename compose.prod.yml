services:
  spotter:
    image: ghcr.io/mathcovax/seaence_vue-front:${TAG}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./spotter.nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - published: 7000
        target: 80

  horizon:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/horizon run duplo:start
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./horizon.env.local:/home/node/project/services/horizon/.env.local
    ports:
      - published: 7001
        target: 80

  harbor:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/harbor run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./harbor.env.local:/home/node/project/services/harbor/.env.local
      - ./firebase.credential.json:/home/node/project/services/harbor/firebase.credential.json

  school:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/school run start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./school.env.local:/home/node/project/services/school/.env.local

  marine-snow:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/marine-snow run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./marine-snow.env.local:/home/node/project/services/marine-snow/.env.local

  abys:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/abys run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./abys.env.local:/home/node/project/services/abys/.env.local

  sea:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/sea run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    volumes:
      - ./sea.env.local:/home/node/project/services/sea/.env.local

  bottle:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/bottle run start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./bottle.env.local:/home/node/project/services/bottle/.env.local

  lighthouse:
    image: ghcr.io/mathcovax/seaence_vue-front:${TAG}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./lighthouse.nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - published: 7002
        target: 80

  beacon:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/beacon run start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./beacon.env.local:/home/node/project/services/beacon/.env.local

  bridge:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/bridge run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./bridge.env.local:/home/node/project/services/bridge/.env.local
    ports:
      - published: 7003
        target: 80

  coral:
    image: ghcr.io/mathcovax/seaence_duplo-back:${TAG}
    command: npm -w services/coral run start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./coral.env.local:/home/node/project/services/coral/.env.local

  rosetta:
    image: ghcr.io/mathcovax/seaence_duplo-rosetta-back:${TAG}
    command: npm -w services/rosetta run duplo:start
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
            - node.role == worker
    volumes:
      - ./rosetta.env.local:/home/node/project/services/rosetta/.env.local
